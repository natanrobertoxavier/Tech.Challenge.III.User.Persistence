name: .NET Build, Unit, and Integration Tests, and Publish

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build, Test and Publish
    runs-on: self-hosted

    steps:
    #- name: Backup existing code and logs
    #  run: |
    #    TIMESTAMP=$(date +"%Y-%m-%d-%H:%M:%S")
    #    CONTAINER_NAME="userpersistence_container"
    #    LOG_FILE="/home/natan/backups/user-persistence-logs-$TIMESTAMP.log"
    #    docker logs $CONTAINER_NAME > $LOG_FILE        
    #    zip -r /home/natan/backups/user-persistence-backup-$TIMESTAMP.zip ${{ github.workspace }} $LOG_FILE
    #    rm $LOG_FILE

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Check running user
      run: whoami

    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.x'

    - name: Restore dependencies
      run: dotnet restore User.persistence/User.persistence.sln

    - name: Build the project
      run: dotnet build User.persistence/User.persistence.sln --no-restore --configuration Release

    - name: Run unit tests
      run: dotnet test User.persistence/User.persistence.Tests/User.persistence.Tests.csproj --no-build --configuration Release --logger "trx;LogFileName=unit-test-user-persistence-results.trx"

    - name: Run integration tests
      run: dotnet test User.persistence/User.persistence.Integration.Tests/User.persistence.Integration.Tests.csproj --no-build --configuration Release --logger "trx;LogFileName=integration-test-user-persistence-results.trx"

    - name: Publish the project
      if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/release/')
      run: dotnet publish User.persistence/User.persistence.sln --no-build --configuration Release --output ${{ github.workspace }}/publish

    - name: Replace appsettings tech.challenge
      run: cp -f /home/natan/appsettings/appsettings.json ${{ github.workspace }}/User.persistence/User.persistence.Api/appsettings.json
    
    - name: Stop and remove existing containers
      run: |
        cd User.persistence && docker-compose -f docker-compose.yaml down

    - name: Build Docker image
      run: |
        cd User.persistence && sudo docker build -t userpersistence:latest .

    - name: Deploy using Docker Compose
      run: |
        cd User.persistence && docker-compose -f docker-compose.yaml up -d --build
